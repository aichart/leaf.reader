{"version":3,"file":"index.603d744b.js","sources":["../../../client/src/components/popup/popup.tsx","../../../client/src/components/book/book-chapter-list/index.tsx","../../../client/src/pages/book-info/index.tsx"],"sourcesContent":["import {\r\n  FC,\r\n  Fragment,\r\n  PropsWithChildren,\r\n} from \"react\";\r\n\r\nexport interface PopupProps extends PropsWithChildren {\r\n  visible: boolean;\r\n  mask?: boolean;\r\n  className?: string;\r\n  onMaskClick?: () => void;\r\n}\r\n\r\nexport const Popup: FC<PopupProps> = ({\r\n  visible,\r\n  className,\r\n  mask,\r\n  children,\r\n  onMaskClick,\r\n}) => {\r\n  mask ??= true;\r\n  return (\r\n    <Fragment>\r\n    {\r\n      visible &&\r\n      <div className={\r\n          `absolute inset-0 flex flex-col bg-black ${mask ? 'bg-opacity-20' : 'bg-opacity-0'} ${className}`\r\n        } onClick={onMaskClick}>\r\n        {children}\r\n      </div>\r\n    }\r\n    </Fragment>\r\n  );\r\n};","import { FC } from \"react\";\r\nimport type { Book } from \"@Shared/booksources\";\r\n\r\n\r\nexport interface BookChapterListProps {\r\n  // 章节列表\r\n  chapters: Book['chapters'];\r\n  // 当前章节索引\r\n  chapterIndex?: number;\r\n  // class name\r\n  className?: string;\r\n  // 选中章节\r\n  onSelect?: (chapterIndex: number) => void;\r\n}\r\n\r\n\r\nexport const BookChapterList: FC<BookChapterListProps> = ({\r\n  chapters,\r\n  chapterIndex,\r\n  className,\r\n  onSelect\r\n}) => {\r\n  chapterIndex ??= 0;\r\n  // 获取文本颜色\r\n  const getTextColor = (idx: number) => {\r\n    if(idx === chapterIndex) {\r\n      return 'text-blue-500';\r\n    }\r\n\r\n    if(Math.random() > 0.5) {\r\n      // 已缓存\r\n      return ''\r\n    }\r\n\r\n    return 'text-gray-400';\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={\r\n      `flex flex-col p-4 divide-y dark:divide-gray-600 overflow-y-auto bg-leaf-50 dark:bg-leaf-50-dark text-base text-leaf-600 dark:text-leaf-600-dark cursor-pointer ${className}`\r\n    } onClick={e => e.stopPropagation()}>\r\n      <span className='p-3'>章节列表</span>\r\n      {\r\n        chapters.map(({name, url}, idx) => (\r\n          <span key={url} className={`p-2 ${getTextColor(idx)}`} onClick={() => onSelect?.(idx)}>{name}</span>\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n};","import { FC, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"@Client/store\";\r\nimport { bookSelector, gotoChapter } from \"@Client/store/features/slice.book\";\r\nimport { add, bookShelfSelector } from \"@Client/store/features/slice.bookshelf\";\r\nimport { RoutePath } from \"@Client/routers\";\r\nimport Popup from \"@Client/components/popup\";\r\nimport { BookChapterList } from \"@Client/components/book/book-chapter-list\";\r\nimport {\r\n  LeftOutline,\r\n  MovieOutline,\r\n} from 'antd-mobile-icons';\r\n\r\n// 书籍信息\r\nconst BookInfoPage: FC = () => {\r\n  const nav = useNavigate();\r\n  const dispath = useAppDispatch();\r\n  const { book, chapterIndex } = useAppSelector(bookSelector);\r\n  const { books } = useAppSelector(bookShelfSelector);\r\n  const inBookShelf = books.find(value => value.bookUrl === book?.bookUrl) !== undefined;\r\n  const [ showChapters, setShowChapters] = useState(false);\r\n  const { coverUrl, name, author, wordCount, kind, intro } = book ?? {};\r\n\r\n  // 阅读章节\r\n  const onRead = (chapterIndex: number) => {\r\n    const len = book?.chapters.length ?? 0;\r\n    if(chapterIndex >= len) {\r\n      return;\r\n    }\r\n    dispath(gotoChapter(chapterIndex));\r\n    nav(RoutePath.BookReader);\r\n  };\r\n\r\n  // 加入书架\r\n  const addToBookShelf = () => {\r\n    if(book === undefined) {\r\n      return;\r\n    }\r\n    dispath(add({book, chapterIndex}));\r\n  };\r\n\r\n  return (\r\n    <div className='flex flex-col h-screen select-none'>\r\n      {/* nav bar */}\r\n      <div className='flex justify-between bg-leaf-secondary dark:bg-leaf-secondary-dark h-8'>\r\n        <button className='btn text-base' onClick={() => nav(-1)}><LeftOutline /></button>\r\n      </div>\r\n\r\n      <div className=' flex-grow flex flex-col items-center m-4 p-4 rounded-3xl border shadow'>\r\n        <img src={coverUrl} alt='封面' className='overflow-clip rounded-md aspect-2/3 w-36 mb-2'/>\r\n        <span className='font-bold text-lg dark:text-gray-300'>{name}</span>\r\n        <button className='btn text-base py-2 text-blue-600'>{author}</button>\r\n        <p className='flex-grow indent-8 text-ellipsis text-gray-400'>{intro}</p>\r\n        <button className='btn border border-gray-400 mt-4' onClick={() => onRead(chapterIndex)}>开始阅读</button>\r\n        <button className='btn text-xs underline text-gray-400' onClick={() => setShowChapters(true)} >章节预览</button>\r\n        {\r\n          !inBookShelf &&\r\n          <button className='btn px-0 self-end text-xs underline text-gray-400' onClick={addToBookShelf} >加入书架 随时阅读</button>\r\n        }\r\n      </div>\r\n\r\n      {/* 章节列表 */}\r\n      <Popup visible={showChapters} mask onMaskClick={() => setShowChapters(false)}>\r\n        <BookChapterList\r\n          className='fixed inset-0 top-12'\r\n          chapters={book?.chapters ?? []}\r\n          chapterIndex={chapterIndex}\r\n          onSelect={onRead}/>\r\n      </Popup>\r\n    </div>\r\n  );\r\n}\r\nexport default BookInfoPage;\r\n"],"names":["Popup","visible","className","mask","children","onMaskClick","Fragment","_jsx","onClick","BookChapterList","chapters","chapterIndex","onSelect","getTextColor","idx","Math","random","e","stopPropagation","map","name","url","BookInfoPage","nav","useNavigate","dispath","useAppDispatch","book","useAppSelector","bookSelector","books","bookShelfSelector","inBookShelf","find","value","bookUrl","undefined","showChapters","setShowChapters","useState","coverUrl","author","wordCount","kind","intro","onRead","len","length","gotoChapter","RoutePath","BookReader","LeftOutline","_jsxs","src","alt","add"],"mappings":"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"}